// User info
 Table users {
  id int [primary key]
  username varchar(50) [not null]
  email varchar(50) [not null, unique]
  password varchar(200) [not null]
}

// Job Applications info 
Enum job_status {
  interested
  pending
  in_progress
  offer
  declined
  ghosted
  follow_up
 }

Table jobs {
  id int [pk]
  user_id int [not null, ref: > users.id]
  column_id int  [not null, ref: > columns.id,note:"use columns.id to get current status"]
  company varchar(50) [not null]
  position varchar(50) [not null]
  salary varchar(50)
  type varchar(20)
  location varchar(50)
  link varchar(50)
  description varchar(200)
  user_note varchar(200)
  date_applied date
  date_scheduled timestamp 
  // timestamptz not supported on dbdiagram.io
  // after SQL code is generated
  // we can change it to timestamptz manualy
}

// Kanban board column
Table columns {
  id int [pk]
  name job_status [not null]
  position int [not null, note:"the order of columns in the Kanban board"]
}


// Documents info
Table docs {
  id int [pk]
  user_id int [not null, ref: - users.id]
  name varchar(50)
  filepath varchar(200) [not null]
}

Table doc_jobs {
doc_id int [not null, ref: > docs.id]
job_id int [ref: > jobs.id]
}

// Contacts info
Table contacts {
  id int [pk]
  user_id int [not null, ref: > users.id]
  user_note varchar(200)
  name varchar(50)
  position varchar(50)
  company varchar(50)
  email varchar(50)
  phone_num varchar(50)  
}

Table contact_jobs {
  contact_id int [not null, ref: > contacts.id]
  job_id int [ref: > jobs.id]
}


// AI_resume_builder
// use Open AI API to generate answer
Table ai_resume_builder {
  id int [pk]
  user_id int [not null, ref: > users.id]
  doc_id int [ref: > docs.id]
  personal_information varchar(200)
  relevant_skills varchar(200)
  education varchar(200)
  experience varchar(200)
  projects varchar(200)
}

// AI_interview_prep
// use Open AI API to generate answer
Table ai_interview_prep {
  id int [pk]
  user_id int [not null, ref: > users.id]
  company varchar(50)
  job_position varchar(50)
  job_description varchar(200)
  ai_response varchar(200) [note:"Generated by OpenAI API"]
}